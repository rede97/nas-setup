import sys
from pathlib import Path
import subprocess

DEFAULT_CONFIG_PATH = Path("/etc/store_deploy/conf.toml")
DECLARE = "Generated by storage-deploy script"


def is_subdirectory(parent_dir: Path, child_dir: Path):
    try:
        rel_path = str(Path(child_dir).relative_to(Path(parent_dir)))
        return not rel_path.startswith('..') and rel_path != ''
    except ValueError:
        return False


def systemctl(action: str, service: str = ""):
    cmd = " ".join(("systemctl", action, service))
    retcode = subprocess.run(
        cmd, shell=True, stdout=sys.stdout, stderr=sys.stderr).returncode
    if retcode != 0:
        raise SystemError(f"run cmd: {cmd} with return code = {retcode}")


class StorageDeployService:
    def __init__(self, cfg: dict, config_target_dir: Path) -> None:
        self.cfg = cfg
        self.config_target_dir = config_target_dir.absolute()

    def update(self):
        pass

    def apply(self, **kwargs):
        pass

    def remove(self):
        pass
